// <auto-generated />
using System;
using Company_APBD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApplication5.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240623185212_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company_APBD.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupportYears")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractId");

                    b.ToTable("Contract");

                    b.HasData(
                        new
                        {
                            ContractId = 1,
                            CustomerId = 1,
                            DiscountId = 1,
                            EndDate = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 1000.00m,
                            SoftwareId = 1,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 1,
                            Version = "1.0"
                        },
                        new
                        {
                            ContractId = 2,
                            CustomerId = 2,
                            DiscountId = 2,
                            EndDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 2000.00m,
                            SoftwareId = 2,
                            StartDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 2,
                            Version = "2.1"
                        },
                        new
                        {
                            ContractId = 3,
                            CustomerId = 3,
                            DiscountId = 3,
                            EndDate = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 3000.00m,
                            SoftwareId = 3,
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 3,
                            Version = "3.3"
                        },
                        new
                        {
                            ContractId = 4,
                            CustomerId = 4,
                            DiscountId = 4,
                            EndDate = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 4000.00m,
                            SoftwareId = 4,
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 1,
                            Version = "4.5"
                        },
                        new
                        {
                            ContractId = 5,
                            CustomerId = 5,
                            DiscountId = 5,
                            EndDate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 1500.00m,
                            SoftwareId = 5,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 2,
                            Version = "1.2"
                        },
                        new
                        {
                            ContractId = 6,
                            CustomerId = 6,
                            DiscountId = 6,
                            EndDate = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 2500.00m,
                            SoftwareId = 6,
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 3,
                            Version = "5.0"
                        },
                        new
                        {
                            ContractId = 7,
                            CustomerId = 7,
                            DiscountId = 7,
                            EndDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 1200.00m,
                            SoftwareId = 7,
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 1,
                            Version = "2.4"
                        },
                        new
                        {
                            ContractId = 8,
                            CustomerId = 8,
                            DiscountId = 8,
                            EndDate = new DateTime(2024, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 2600.00m,
                            SoftwareId = 8,
                            StartDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 2,
                            Version = "3.6"
                        },
                        new
                        {
                            ContractId = 9,
                            CustomerId = 9,
                            DiscountId = 9,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 1800.00m,
                            SoftwareId = 9,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 3,
                            Version = "4.0"
                        },
                        new
                        {
                            ContractId = 10,
                            CustomerId = 10,
                            DiscountId = 10,
                            EndDate = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            Price = 2200.00m,
                            SoftwareId = 10,
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 1,
                            Version = "1.5"
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Customer");
                });

            modelBuilder.Entity("Company_APBD.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DiscountId");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            DiscountType = "Subscription",
                            EndDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Black Friday",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 10.00m
                        },
                        new
                        {
                            DiscountId = 2,
                            DiscountType = "Purchase",
                            EndDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Summer Sale",
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 15.00m
                        },
                        new
                        {
                            DiscountId = 3,
                            DiscountType = "Subscription",
                            EndDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Year Offer",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 5.00m
                        },
                        new
                        {
                            DiscountId = 4,
                            DiscountType = "Purchase",
                            EndDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cyber Monday",
                            StartDate = new DateTime(2024, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 20.00m
                        },
                        new
                        {
                            DiscountId = 5,
                            DiscountType = "Subscription",
                            EndDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Winter Discount",
                            StartDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 8.00m
                        },
                        new
                        {
                            DiscountId = 6,
                            DiscountType = "Purchase",
                            EndDate = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spring Sale",
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 12.00m
                        },
                        new
                        {
                            DiscountId = 7,
                            DiscountType = "Subscription",
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Autumn Offer",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 7.00m
                        },
                        new
                        {
                            DiscountId = 8,
                            DiscountType = "Purchase",
                            EndDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Holiday Deal",
                            StartDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 10.00m
                        },
                        new
                        {
                            DiscountId = 9,
                            DiscountType = "Purchase",
                            EndDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Loyalty Discount",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 5.00m
                        },
                        new
                        {
                            DiscountId = 10,
                            DiscountType = "Subscription",
                            EndDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exclusive Offer",
                            StartDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 25.00m
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Login = "employee1",
                            PasswordHash = "hashedpassword1",
                            Role = "Manager"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Login = "employee2",
                            PasswordHash = "hashedpassword2",
                            Role = "Support"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Login = "employee3",
                            PasswordHash = "hashedpassword3",
                            Role = "Sales"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Login = "employee4",
                            PasswordHash = "hashedpassword4",
                            Role = "Developer"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Login = "employee5",
                            PasswordHash = "hashedpassword5",
                            Role = "HR"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Login = "employee6",
                            PasswordHash = "hashedpassword6",
                            Role = "Admin"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Login = "employee7",
                            PasswordHash = "hashedpassword7",
                            Role = "Intern"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Login = "employee8",
                            PasswordHash = "hashedpassword8",
                            Role = "Accountant"
                        },
                        new
                        {
                            EmployeeId = 9,
                            Login = "employee9",
                            PasswordHash = "hashedpassword9",
                            Role = "Designer"
                        },
                        new
                        {
                            EmployeeId = 10,
                            Login = "employee10",
                            PasswordHash = "hashedpassword10",
                            Role = "Marketing"
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 1000.00m,
                            ContractId = 1,
                            CustomerId = 1,
                            PaymentDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 2000.00m,
                            ContractId = 2,
                            CustomerId = 2,
                            PaymentDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 3,
                            Amount = 3000.00m,
                            ContractId = 3,
                            CustomerId = 3,
                            PaymentDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 4,
                            Amount = 4000.00m,
                            ContractId = 4,
                            CustomerId = 4,
                            PaymentDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 5,
                            Amount = 1500.00m,
                            ContractId = 5,
                            CustomerId = 5,
                            PaymentDate = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 6,
                            Amount = 2500.00m,
                            ContractId = 6,
                            CustomerId = 6,
                            PaymentDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 7,
                            Amount = 1200.00m,
                            ContractId = 7,
                            CustomerId = 7,
                            PaymentDate = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 8,
                            Amount = 2600.00m,
                            ContractId = 8,
                            CustomerId = 8,
                            PaymentDate = new DateTime(2024, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 9,
                            Amount = 1800.00m,
                            ContractId = 9,
                            CustomerId = 9,
                            PaymentDate = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentId = 10,
                            Amount = 2200.00m,
                            ContractId = 10,
                            CustomerId = 10,
                            PaymentDate = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareId"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftwareId");

                    b.ToTable("Software");

                    b.HasData(
                        new
                        {
                            SoftwareId = 1,
                            Category = "Finance",
                            CurrentVersion = "1.0",
                            Description = "Financial management software",
                            Name = "Finance Pro"
                        },
                        new
                        {
                            SoftwareId = 2,
                            Category = "Education",
                            CurrentVersion = "2.1",
                            Description = "Educational software for schools",
                            Name = "Edu Learn"
                        },
                        new
                        {
                            SoftwareId = 3,
                            Category = "Health",
                            CurrentVersion = "3.3",
                            Description = "Health monitoring software",
                            Name = "Health Tracker"
                        },
                        new
                        {
                            SoftwareId = 4,
                            Category = "Retail",
                            CurrentVersion = "4.5",
                            Description = "Retail management software",
                            Name = "Retail Manager"
                        },
                        new
                        {
                            SoftwareId = 5,
                            Category = "Real Estate",
                            CurrentVersion = "1.2",
                            Description = "Real estate management software",
                            Name = "Real Estate Pro"
                        },
                        new
                        {
                            SoftwareId = 6,
                            Category = "Marketing",
                            CurrentVersion = "5.0",
                            Description = "Marketing automation software",
                            Name = "Marketing Hub"
                        },
                        new
                        {
                            SoftwareId = 7,
                            Category = "Productivity",
                            CurrentVersion = "2.4",
                            Description = "Project management software",
                            Name = "Project Planner"
                        },
                        new
                        {
                            SoftwareId = 8,
                            Category = "CRM",
                            CurrentVersion = "3.6",
                            Description = "Customer relationship management software",
                            Name = "CRM Boost"
                        },
                        new
                        {
                            SoftwareId = 9,
                            Category = "HR",
                            CurrentVersion = "4.0",
                            Description = "Human resources management software",
                            Name = "HR Connect"
                        },
                        new
                        {
                            SoftwareId = 10,
                            Category = "Logistics",
                            CurrentVersion = "1.5",
                            Description = "Logistics and supply chain software",
                            Name = "Logistics Pro"
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RenewalPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscription");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            CustomerId = 1,
                            DiscountId = 1,
                            EndDate = new DateTime(2024, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50.00m,
                            RenewalPeriod = "Monthly",
                            SoftwareId = 1,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 2,
                            CustomerId = 2,
                            DiscountId = 2,
                            EndDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 500.00m,
                            RenewalPeriod = "Yearly",
                            SoftwareId = 2,
                            StartDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 3,
                            CustomerId = 3,
                            DiscountId = 3,
                            EndDate = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60.00m,
                            RenewalPeriod = "Monthly",
                            SoftwareId = 3,
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 4,
                            CustomerId = 4,
                            DiscountId = 4,
                            EndDate = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 600.00m,
                            RenewalPeriod = "Yearly",
                            SoftwareId = 4,
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 5,
                            CustomerId = 5,
                            DiscountId = 5,
                            EndDate = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 70.00m,
                            RenewalPeriod = "Monthly",
                            SoftwareId = 5,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 6,
                            CustomerId = 6,
                            DiscountId = 6,
                            EndDate = new DateTime(2025, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 700.00m,
                            RenewalPeriod = "Yearly",
                            SoftwareId = 6,
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 7,
                            CustomerId = 7,
                            DiscountId = 7,
                            EndDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80.00m,
                            RenewalPeriod = "Monthly",
                            SoftwareId = 7,
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 8,
                            CustomerId = 8,
                            DiscountId = 8,
                            EndDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 800.00m,
                            RenewalPeriod = "Yearly",
                            SoftwareId = 8,
                            StartDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 9,
                            CustomerId = 9,
                            DiscountId = 9,
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 90.00m,
                            RenewalPeriod = "Monthly",
                            SoftwareId = 9,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SubscriptionId = 10,
                            CustomerId = 10,
                            DiscountId = 10,
                            EndDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 900.00m,
                            RenewalPeriod = "Yearly",
                            SoftwareId = 10,
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.CompanyCustomer", b =>
                {
                    b.HasBaseType("Company_APBD.Models.Customer");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CompanyCustomer");

                    b.HasData(
                        new
                        {
                            CustomerId = 6,
                            Address = "123 Birch St, Warsaw, Poland",
                            CustomerType = "Company",
                            Email = "info@company1.com",
                            PhoneNumber = "+48678901234",
                            CompanyName = "Company 1",
                            KRS = "1234567890"
                        },
                        new
                        {
                            CustomerId = 7,
                            Address = "234 Pine St, Krakow, Poland",
                            CustomerType = "Company",
                            Email = "info@company2.com",
                            PhoneNumber = "+48789012345",
                            CompanyName = "Company 2",
                            KRS = "2345678901"
                        },
                        new
                        {
                            CustomerId = 8,
                            Address = "345 Oak St, Poznan, Poland",
                            CustomerType = "Company",
                            Email = "info@company3.com",
                            PhoneNumber = "+48890123456",
                            CompanyName = "Company 3",
                            KRS = "3456789012"
                        },
                        new
                        {
                            CustomerId = 9,
                            Address = "456 Maple St, Wroclaw, Poland",
                            CustomerType = "Company",
                            Email = "info@company4.com",
                            PhoneNumber = "+48901234567",
                            CompanyName = "Company 4",
                            KRS = "4567890123"
                        },
                        new
                        {
                            CustomerId = 10,
                            Address = "567 Willow St, Gdansk, Poland",
                            CustomerType = "Company",
                            Email = "info@company5.com",
                            PhoneNumber = "+48101234568",
                            CompanyName = "Company 5",
                            KRS = "5678901234"
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.IndividualCustomer", b =>
                {
                    b.HasBaseType("Company_APBD.Models.Customer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasDiscriminator().HasValue("IndividualCustomer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "707 Willow St, Gdansk, Poland",
                            CustomerType = "Company",
                            Email = "info@company5.com",
                            PhoneNumber = "+48101234568",
                            FirstName = "John",
                            LastName = "Doe",
                            PESEL = "12345678901"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "808 Maple St, Warsaw, Poland",
                            CustomerType = "Individual",
                            Email = "jane.smith@example.com",
                            PhoneNumber = "+48234567890",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PESEL = "23456789012"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "909 Oak St, Krakow, Poland",
                            CustomerType = "Individual",
                            Email = "alice.johnson@example.com",
                            PhoneNumber = "+48345678901",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            PESEL = "34567890123"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "1010 Pine St, Wroclaw, Poland",
                            CustomerType = "Individual",
                            Email = "bob.brown@example.com",
                            PhoneNumber = "+48456789012",
                            FirstName = "Bob",
                            LastName = "Brown",
                            PESEL = "45678901234"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "1111 Cedar St, Poznan, Poland",
                            CustomerType = "Individual",
                            Email = "carol.davis@example.com",
                            PhoneNumber = "+48567890123",
                            FirstName = "Carol",
                            LastName = "Davis",
                            PESEL = "56789012345"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
