// <auto-generated />
using System;
using Company_APBD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApplication5.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company_APBD.Models.CompanyCustomer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adress");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KRS");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("CustomerID");

                    b.ToTable("CompanyCustomer");

                    b.HasData(
                        new
                        {
                            CustomerID = 4,
                            Address = "Krasnalska",
                            CompanyName = "CompanyName1",
                            Email = "Email1",
                            IsDeleted = false,
                            KRS = "111111111",
                            PhoneNumber = "PhoneNumber1"
                        },
                        new
                        {
                            CustomerID = 5,
                            Address = "Trakt lubelski",
                            CompanyName = "CompanyName2",
                            Email = "Email2",
                            IsDeleted = false,
                            KRS = "123456789",
                            PhoneNumber = "PhoneNumber2"
                        },
                        new
                        {
                            CustomerID = 6,
                            Address = "grrpowska",
                            CompanyName = "CompanyName3",
                            Email = "Email3",
                            IsDeleted = false,
                            KRS = "123336722",
                            PhoneNumber = "PhoneNumber3"
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.ContractCompanyCustmer", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"), 1L, 1);

                    b.Property<int>("CompanyCustomerID")
                        .HasColumnType("int");

                    b.Property<int>("ContactLength")
                        .HasColumnType("int")
                        .HasColumnName("ContactLength");

                    b.Property<int?>("ContractCompanyCustmerContractID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int")
                        .HasColumnName("Fk_Software");

                    b.Property<decimal>("TotalToPay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalToPay");

                    b.Property<int>("discountID")
                        .HasColumnType("int")
                        .HasColumnName("discountID");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("endDate");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<decimal>("isPaid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("isPaid");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("startDate");

                    b.HasKey("ContractID");

                    b.HasIndex("CompanyCustomerID");

                    b.HasIndex("ContractCompanyCustmerContractID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("ContractCompanyCustmer");
                });

            modelBuilder.Entity("Company_APBD.Models.ContractIndividualCustomer", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"), 1L, 1);

                    b.Property<int>("ContactLength")
                        .HasColumnType("int")
                        .HasColumnName("ContactLength");

                    b.Property<int?>("ContractIndividualCustomerContractID")
                        .HasColumnType("int");

                    b.Property<int>("IndividualCustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int")
                        .HasColumnName("Fk_Software");

                    b.Property<decimal>("TotalToPay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalToPay");

                    b.Property<int>("discountID")
                        .HasColumnType("int")
                        .HasColumnName("discountID");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("endDate");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<decimal>("isPaid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("isPaid");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("startDate");

                    b.HasKey("ContractID");

                    b.HasIndex("ContractIndividualCustomerContractID");

                    b.HasIndex("IndividualCustomerID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("ContractCustomerIndividual");
                });

            modelBuilder.Entity("Company_APBD.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountID"), 1L, 1);

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DiscountType");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Value");

                    b.HasKey("DiscountID");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            DiscountID = 1,
                            DiscountType = "Type1",
                            EndDate = new DateTime(2024, 7, 8, 17, 20, 1, 177, DateTimeKind.Local).AddTicks(9860),
                            Name = "Discount1",
                            StartDate = new DateTime(2024, 6, 28, 17, 20, 1, 177, DateTimeKind.Local).AddTicks(9830),
                            Value = 0.1m
                        },
                        new
                        {
                            DiscountID = 2,
                            DiscountType = "Type2",
                            EndDate = new DateTime(2024, 7, 8, 17, 20, 1, 177, DateTimeKind.Local).AddTicks(9863),
                            Name = "Discount2",
                            StartDate = new DateTime(2024, 6, 28, 17, 20, 1, 177, DateTimeKind.Local).AddTicks(9863),
                            Value = 0.2m
                        },
                        new
                        {
                            DiscountID = 3,
                            DiscountType = "Type3",
                            EndDate = new DateTime(2024, 7, 8, 17, 20, 1, 177, DateTimeKind.Local).AddTicks(9866),
                            Name = "Discount3",
                            StartDate = new DateTime(2024, 6, 28, 17, 20, 1, 177, DateTimeKind.Local).AddTicks(9865),
                            Value = 0.3m
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RefreshToken");

                    b.Property<int>("RoleID")
                        .HasColumnType("int")
                        .HasColumnName("FK_RoleID");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RoleID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Company_APBD.Models.IndividualCustomer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adress");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("PESEL");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("CustomerID");

                    b.ToTable("IndividualCustomer");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "Wolecinska",
                            Email = "Email1",
                            FirstName = "FirstName1",
                            IsDeleted = false,
                            LastName = "LastName1",
                            PESEL = "12345678901",
                            PhoneNumber = "PhoneNumber1"
                        },
                        new
                        {
                            CustomerID = 2,
                            Address = "Krasnalska",
                            Email = "Email2",
                            FirstName = "FirstName2",
                            IsDeleted = false,
                            LastName = "LastName2",
                            PESEL = "23345678901",
                            PhoneNumber = "PhoneNumber2"
                        },
                        new
                        {
                            CustomerID = 3,
                            Address = "Krasnalska",
                            Email = "Email3",
                            FirstName = "FirstName3",
                            IsDeleted = false,
                            LastName = "LastName3",
                            PESEL = "22345678901",
                            PhoneNumber = "PhoneNumber3"
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("RoleID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.Software", b =>
                {
                    b.Property<int>("SoftwareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareID"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Category");

                    b.Property<string>("CurrentVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CurrentVersion");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.HasKey("SoftwareID");

                    b.ToTable("Software");

                    b.HasData(
                        new
                        {
                            SoftwareID = 1,
                            Category = "Category1",
                            CurrentVersion = "1.0",
                            Description = "Description1",
                            Name = "Software1",
                            Price = 100m
                        },
                        new
                        {
                            SoftwareID = 2,
                            Category = "Category2",
                            CurrentVersion = "2.0",
                            Description = "Description2",
                            Name = "Software2",
                            Price = 200m
                        },
                        new
                        {
                            SoftwareID = 3,
                            Category = "Category3",
                            CurrentVersion = "3.0",
                            Description = "Description3",
                            Name = "Software3",
                            Price = 300m
                        });
                });

            modelBuilder.Entity("Company_APBD.Models.ContractCompanyCustmer", b =>
                {
                    b.HasOne("Company_APBD.Models.CompanyCustomer", "CompanyCustomer")
                        .WithMany("ContractCompanyCustmers")
                        .HasForeignKey("CompanyCustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company_APBD.Models.ContractCompanyCustmer", null)
                        .WithMany("ContractCompanyCustmers")
                        .HasForeignKey("ContractCompanyCustmerContractID");

                    b.HasOne("Company_APBD.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyCustomer");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("Company_APBD.Models.ContractIndividualCustomer", b =>
                {
                    b.HasOne("Company_APBD.Models.ContractIndividualCustomer", null)
                        .WithMany("ContractIndividualCustomers")
                        .HasForeignKey("ContractIndividualCustomerContractID");

                    b.HasOne("Company_APBD.Models.IndividualCustomer", "Individualcustomer")
                        .WithMany("ContractIndividualCustomer")
                        .HasForeignKey("IndividualCustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company_APBD.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individualcustomer");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("Company_APBD.Models.Employee", b =>
                {
                    b.HasOne("Company_APBD.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Company_APBD.Models.CompanyCustomer", b =>
                {
                    b.Navigation("ContractCompanyCustmers");
                });

            modelBuilder.Entity("Company_APBD.Models.ContractCompanyCustmer", b =>
                {
                    b.Navigation("ContractCompanyCustmers");
                });

            modelBuilder.Entity("Company_APBD.Models.ContractIndividualCustomer", b =>
                {
                    b.Navigation("ContractIndividualCustomers");
                });

            modelBuilder.Entity("Company_APBD.Models.IndividualCustomer", b =>
                {
                    b.Navigation("ContractIndividualCustomer");
                });

            modelBuilder.Entity("Company_APBD.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
